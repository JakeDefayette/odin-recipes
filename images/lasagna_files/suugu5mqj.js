



/* ControlTag Loader for Mercedes Benz USA a318064c-c214-46cb-8e1a-1c0e53deb350 */
(function(w, cs) {
  
  if (/Twitter for iPhone/.test(w.navigator.userAgent || '')) {
    return;
  }

  var debugging = /kxdebug/.test(w.location);
  var log = function() {
    
    debugging && w.console && w.console.log([].slice.call(arguments).join(' '));
  };

  var load = function(url, callback) {
    log('Loading script from:', url);
    var node = w.document.createElement('script');
    var currentScripts = document.querySelectorAll('script[src*="/controltag/"]');
    var nonceValue = null;
    for(var i=0,len=currentScripts.length; i<len; i++) {
      var script = currentScripts[i];
      if(!nonceValue) {
        nonceValue = script.nonce || null;
      }
    }
    if(nonceValue) {
      node.nonce = nonceValue
    }
    node.async = true;  
    node.src = url;

    
    node.onload = node.onreadystatechange = function () {
      var state = node.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        log('Script loaded from:', url);
        callback.done = true;  
        callback();
      }
    };

    
    var sibling = w.document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(node, sibling);
  };

  var config = {"app":{"name":"krux-scala-config-webservice","version":"3.42.5","schema_version":3},"confid":"suugu5mqj","context_terms":[],"publisher":{"name":"Mercedes Benz USA","active":true,"uuid":"a318064c-c214-46cb-8e1a-1c0e53deb350","version_bucket":"stable","id":3275},"params":{"first_party_dmp_managed":false,"link_header_bidder":false,"site_level_supertag_config":"site","recommend":false,"control_tag_pixel_throttle":100,"fingerprint":false,"optout_button_optout_text":"Browser Opt Out","channel":"display","user_data_timing":"load","consent_active":true,"use_central_usermatch":true,"store_realtime_segments":false,"tag_source":false,"link_hb_start_event":"ready","optout_button_optin_text":"Browser Opt In","first_party_uid":true,"dcm_profile_ids":"4488676","link_hb_timeout":2000,"link_hb_adserver_subordinate":true,"optimize_realtime_segments":false,"link_hb_adserver":"dfp","client_type":"marketer","target_fingerprint":false,"context_terms":true,"optout_button_id":"kx-optout-button","user_id_cookie":"MBUSA_WEB_ID","dfp_premium":true,"control_tag_namespace":"mercedesbenzusa","support_content_security_policy":false},"prioritized_segments":[],"realtime_segments":[],"services":{"userdata":"//cdn.krxd.net/userdata/get","contentConnector":"https://connector.krxd.net/content_connector","stats":"//apiservices.krxd.net/stats","optout":"//cdn.krxd.net/userdata/optout/status","event":"//beacon.krxd.net/event.gif","set_optout":"https://consumer.krxd.net/consumer/optout","data":"//beacon.krxd.net/data.gif","link_hb_stats":"//beacon.krxd.net/link_bidder_stats.gif","userData":"//cdn.krxd.net/userdata/get","link_hb_mas":"https://link.krxd.net/hb","config":"//cdn.krxd.net/controltag/{{ confid }}.js","social":"//beacon.krxd.net/social.gif","addSegment":"//cdn.krxd.net/userdata/add","pixel":"//beacon.krxd.net/pixel.gif","um":"https://usermatch.krxd.net/um/v2","controltag":"//cdn.krxd.net/ctjs/controltag.js.{hash}","loopback":"https://consumer.krxd.net/consumer/tmp_cookie","remove":"https://consumer.krxd.net/consumer/remove/a318064c-c214-46cb-8e1a-1c0e53deb350","click":"https://apiservices.krxd.net/click_tracker/track","stats_export":"//beacon.krxd.net/controltag_stats.gif","userdataApi":"//cdn.krxd.net/userdata/v1/segments/get","cookie":"//beacon.krxd.net/cookie2json","proxy":"//cdn.krxd.net/partnerjs/xdi","consent_get":"https://consumer.krxd.net/consent/get/a318064c-c214-46cb-8e1a-1c0e53deb350","consent_set":"https://consumer.krxd.net/consent/set/a318064c-c214-46cb-8e1a-1c0e53deb350","is_optout":"https://beacon.krxd.net/optout_check","impression":"//beacon.krxd.net/ad_impression.gif","transaction":"//beacon.krxd.net/transaction.gif","log":"//jslog.krxd.net/jslog.gif","portability":"https://consumer.krxd.net/consumer/portability/a318064c-c214-46cb-8e1a-1c0e53deb350","set_optin":"https://consumer.krxd.net/consumer/optin","usermatch":"//beacon.krxd.net/usermatch.gif"},"experiments":[],"site":{"name":"MBUSA - Display","cap":2,"id":1663035,"organization_id":3275,"uid":"suugu5mqj"},"tags":[{"id":35356,"name":"Krux URL Param DTC","content":"<script>\n(function(){\n\n\tvar params = Krux('require:util').urlParams();\n\tvar capture_params = ('sd_campaign_type,sd_digadprov,sd_campaign,sd_channel,sd_digadid,sd_digadcid,sd_digadkeyword,sd_matchtype,anchor,utm_source,utm_medium,utm_campaign,utm_term,utm_content,utm_id'||'').split(',');\n\t\n\tvar o = {};\n\tfor(var i=0;i<capture_params.length;i++){\n\t\tif(params.hasOwnProperty(capture_params[i])){\n\t\t\to['page_attr_' + capture_params[i]] = params[capture_params[i]];\n\t\t}\n\t}\n\tKrux ('set', o);\n\t\n})();\n</script>","target":null,"target_action":"append","timing":"asap","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":35594,"name":"Krux - UTM Media Tag - Mobile In App","content":"<script>\n(function() {\n    var clickURL = Krux('get', 'url_click'),\n        _ = Krux('require:underscore'),\n        libUtil = Krux('require:util.library-tag'),\n        pixelParam, store, sent,\n        confid, campaignid, siteid, advertiserid, placementid, adid, creativeid;\n\n    // Function to retrieve capping info from sessionStorage\n    function get(key) {\n        try {\n            return JSON.parse(sessionStorage.getItem(key) || '[]');\n        } catch (e) {\n            return [];\n        }\n    }\n\n    // Function to add capping info to sessionStorage\n    function set(key, value) {\n        try {\n            sessionStorage.setItem(key, JSON.stringify(value));\n        } catch (e) {}\n    }\n\n    // Function to check if tag is valid by comparing aginst capping info\n    function configValidate(config) {\n        var allowedSource = libUtil.removeFalsyStrings('undefined'),\n            i = 0;\n        for (; i < store.length; i++) {\n            if (_.isEqual(store[i], config)) return false;\n        }\n        // Cater for client not using allowedSource\n        if (!allowedSource.length) allowedSource.push(config.kxsiteid);\n        // Invalid if source is not in the allowed list\n        if (_.indexOf(allowedSource, config.kxsiteid) < 0) return false;\n        return true;\n    }\n\n    // Function to collect and normalize values\n    function getParameter(method, path) {\n        var value;\n\n        if (!(method && path)) return;\n\n        switch (method) {\n            case 'none':\n                break;\n            case 'text':\n                value = path;\n                break;\n            case 'get':\n                value = Krux('get', path);\n                break;\n            default:\n                value = Krux('scrape.' + method, path);\n        }\n\n        if (value && !_.isArray(value)) return value\n            .replace(/[^a-zA-Z0-9_-]+/g, '_')\n            .replace(/_+/g, '_')\n            .replace(/^_/, '')\n            .replace(/_$/, '');\n        // Use null if no result as it is included in JSON.stringify\n        return null;\n    }\n\n    // Scrape Media Attributes\n    confid = getParameter('url_param', 'confid');\n    campaignid = getParameter('url_param', 'utm_campaign');\n    siteid = getParameter('url_param', 'utm_source');\n    advertiserid = getParameter('url_param', 'utm_advertiserid');\n    placementid = getParameter('url_param', 'utm_placementid');\n    adid = getParameter('url_param', 'utm_adid');\n    creativeid = getParameter('url_param', 'utm_creativeid');\n\n    // Ensure minimum requirements are met\n    if (confid && campaignid && siteid) {\n        // Use omit to remove undefined values to match validation object\n        pixelParam = _.omit({\n            'kxconfid': confid,\n            'kxcampaignid': campaignid,\n            'kxsiteid': siteid,\n            'kxadvertiserid': advertiserid,\n            'kxplacementid': placementid,\n            'kxadid': adid,\n            'kxcreativeid': creativeid,\n            'clk': 'https://beacon.krxd.net/click_landing.gif'\n        }, function(value) {\n            return !value\n        });\n\n        // Retrieve capping info\n        store = get('k_utm_store');\n\n        if (configValidate(pixelParam)) {\n            // Update capping info to prevent re-fires\n            store.push(pixelParam);\n            set('k_utm_store', store);\n            sent = Krux('require:http').pixel({\n                url: clickURL,\n                data: pixelParam\n            });\n        }\n    }\n\n}).call();\n</script>","target":null,"target_action":"append","timing":"asap","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":34979,"name":"Krux DTC Standard","content":"<script>\n(function(){\n\tKrux('scrape',{'page_attr_url_path_1':{'url_path':'1'}});\n\tKrux('scrape',{'page_attr_url_path_2':{'url_path':'2'}});\n\tKrux('scrape',{'page_attr_url_path_3':{'url_path':'3'}});\n  \tKrux('scrape',{'page_attr_url_path_4':{'url_path':'4'}});\n\tKrux('scrape',{'page_attr_meta_keywords':{meta_name:'keywords'}});\n\n\tKrux('scrape',{'page_attr_domain':{url_domain: '2'}});\n\n})();\n</script>","target":null,"target_action":"append","timing":"onready","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":35274,"name":"Krux Custom DTC - Web","content":"<script>\n(function() {var o = {};\n\n  \tif(window._satellite){\n\t//Page Attributes\n\to['page_attr_page_type'] = _satellite.getVar('page_type');\n\to['page_attr_vehicle_class'] = _satellite.getVar('vehicle_class');\n\to['page_attr_vehicle_model'] = _satellite.getVar('vehicle_model');\n\to['page_attr_vehicle_exterior_packages'] = _satellite.getVar('vehicle_exterior_packages');\n\to['page_attr_vehicle_fabric'] = _satellite.getVar('vehicle_fabric');\n\to['page_attr_vehicle_interior_packages'] = _satellite.getVar('vehicle_interior_packages');\n\to['page_attr_vehicle_paint'] = _satellite.getVar('vehicle_paint');\n\to['page_attr_vehicle_vehicle'] = _satellite.getVar('vehicle_vehicle');\n\to['page_attr_vehicle_year'] = _satellite.getVar('vehicle_year');\n\to['page_attr_vehicle_bodystyle'] = _satellite.getVar('vehicle_bodystyle');\n\to['page_attr_vehicle_availability'] = _satellite.getVar('vehicle_availability');\n\to['page_attr_variant'] = _satellite.getVar('variant');\n\to['page_attr_aggregateFilters'] = _satellite.getVar('aggregateFilters');\n\to['page_attr_dealerID'] = _satellite.getVar('dealerID');\n\to['page_attr_inventoryDealer'] = _satellite.getVar('inventoryDealer');\n\to['page_attr_document_title'] = _satellite.getVar('document_title');\n\to['page_attr_reservationCD'] = _satellite.getVar('reservationCD');\n\to['page_attr_inventory_dealer_phone_number'] = _satellite.getVar('Inventory dealer phone number');\n\to['page_attr_referrer'] = _satellite.getVar('referrer');\n\to['page_attr_pageViewURL'] = _satellite.getVar('pageViewURL');\n\to['page_attr_pageType'] = _satellite.getVar('pageType');\n\n\n\t//User Attributes\n\to['user_attr_experiencevariable1'] = _satellite.getVar('experienceVariable1');\n\to['user_attr_experiencevariable2'] = _satellite.getVar('experienceVariable2');\n\to['user_attr_loggedStatus'] = _satellite.getVar('loggedStatus');\n\to['user_attr_gaclientid'] = _satellite.getVar('gaClientID');\n\to['user_attr_lower_web_uuid'] = _satellite.getVar('lower_web_uuid');\n\to['user_attr_web_uuid'] = (_satellite.getVar('web_uuid') || _satellite.getVar('webUUID'));\n\n\tvar dl = _satellite.getVar('dataLayer');\n\tif(dl && dl.length > 0 && dl[0].vehicles){\n\t\to['user_attr_number_of_validated_vins'] = _satellite.getVar('dataLayer')[0].vehicles.length;\n\t}\n      \n\to['user_attr_hashed_ciam_value'] = _satellite.getVar('Hashed CIAM Value');\n    }\n  \n\tKrux('set', o);})\n()\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":35289,"name":"Google MBUSA.com RLSA Tag","content":"<!-- Google Code for Krux -->\n<!-- Remarketing tags may not be associated with personally identifiable information or placed on pages related to sensitive categories. For instructions on adding this tag and more information on the above requirements, read the setup guide: google.com/ads/remarketingsetup -->\n<script type=\"text/javascript\">\n\tvar krux_segments = Krux('get','user_segments') || []; //String\n\tvar tSegs = 'abc123'.toLowerCase().split(',');\n\tvar segsToSend = [];\n\n\tkrux_segments.sort();\n\ttSegs.sort();\n\n\tif(tSegs[0].toLowerCase() == 'all'){\n\t\tsegsToSend = krux_segments;\n\t}else{\n\t\ttSegs.map(function(seg) {\n\t         if(krux_segments.indexOf(seg) !== -1) {\n\t            segsToSend.push(seg);\n\t         }\n\t     });\n\t}\n\n\tsegsToSend = segsToSend.join(',');\n\n\twindow.google_tag_params = window.google_tag_params || {};\n\twindow.google_tag_params.krux_segments = segsToSend;\n\n</script>\n<script type=\"text/javascript\">\n/* <![CDATA[ */\nvar google_conversion_id = 994583513;\nvar google_conversion_label = \"LCP Western Shared Remarketing ID\";\nvar google_custom_params = window.google_tag_params;\nvar google_remarketing_only = true;\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\">\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":[],"collects_data":true},{"id":39961,"name":"UTM Media Tag - DataXu","content":"<script>\n(function() {\n    var clickURL = Krux('get', 'url_click'),\n        _ = Krux('require:underscore'),\n        libUtil = Krux('require:util.library-tag'),\n        pixelParam, store, sent,\n        confid, campaignid, siteid;\n\n    // Function to retrieve capping info from sessionStorage\n    function get(key) {\n        try {\n            return JSON.parse(sessionStorage.getItem(key) || '[]');\n        } catch (e) {\n            return [];\n        }\n    }\n\n    // Function to add capping info to sessionStorage\n    function set(key, value) {\n        try {\n            sessionStorage.setItem(key, JSON.stringify(value));\n        } catch (e) {}\n    }\n\n    // Function to check if tag is valid by comparing aginst capping info\n    function configValidate(config) {\n        var allowedSource = libUtil.removeFalsyStrings('dataxu'.toLowerCase()),\n            i = 0;\n        for (; i < store.length; i++) {\n            if (_.isEqual(store[i], config)) return false;\n        }\n        // Cater for client not using allowedSource\n        if (!allowedSource.length) allowedSource.push(config.kxsiteid.toLowerCase());\n        // Invalid if source is not in the allowed list\n        if (_.indexOf(allowedSource, config.kxsiteid.toLowerCase()) < 0) return false;\n        return true;\n    }\n\n    // Function to collect and normalize values\n    function getParameter(method, path) {\n        var value;\n\n        if (!(method && path)) return;\n\n        switch (method) {\n            case 'none':\n                break;\n            case 'text':\n                value = path;\n                break;\n            case 'get':\n                value = Krux('get', path);\n                break;\n            default:\n                value = Krux('scrape.' + method, path);\n        }\n\n        if (value && !_.isArray(value)) return value\n            .replace(/[^a-zA-Z0-9_-]+/g, '_')\n            .replace(/_+/g, '_')\n            .replace(/^_/, '')\n            .replace(/_$/, '');\n        // Use null if no result as it is included in JSON.stringify\n        return null;\n    }\n\n    // Scrape Media Attributes\n    confid = getParameter('url_param', 'confid');\n    campaignid = getParameter('url_param', 'utm_campaign');\n    siteid = getParameter('url_param', 'utm_source');\n\n    // Ensure minimum requirements are met\n    if (confid && campaignid && siteid) {\n        // Use omit to remove undefined values to match validation object\n        pixelParam = _.omit({\n            'kxconfid': confid,\n            'kxcampaignid': campaignid,\n            'kxsiteid': siteid,\n            'kxadvertiserid': getParameter('url_param', 'utm_advertiserid'),\n            'kxplacementid': getParameter('url_param', 'utm_placementid'),\n            'kxadid': getParameter('undefined', 'undefined'),\n            'kxcreativeid': getParameter('undefined', 'undefined'),\n            'kxbrand': getParameter('undefined', 'undefined'),\n            'clk': 'https://beacon.krxd.net/click_landing.gif'\n        }, function(value) {\n            return !value\n        });\n\n        // Retrieve capping info\n        store = get('k_utm_store');\n\n        if (configValidate(pixelParam)) {\n            // Update capping info to prevent re-fires\n            store.push(pixelParam);\n            set('k_utm_store', store);\n            sent = Krux('require:http').pixel({\n                url: clickURL,\n                data: pixelParam\n            });\n        }\n    }\n}).call();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true}],"usermatch_tags":[{"id":5,"name":"DataXu User Match","content":"<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        var prefix = location.protocol;\r\n        if (kuid) {\r\n           var dxu_url = '//pm.w55c.net/ping_match.gif?st=Krux&rurl=' + prefix + '//beacon.krxd.net/usermatch.gif?partner=dataxu&uid=_wfivefivec_';\r\n           var i = new Image();\r\n           i.src = dxu_url;\r\n        }\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":6,"name":"Google User Match","content":"<script>\r\n(function() {\r\n\r\nvar kuid = Krux('get', 'user');\r\n  if(kuid){\r\n  // original google user match tag. will be deprecated june 1, 2020\r\n  new Image().src = 'https://usermatch.krxd.net/um/v2?partner=google';\r\n\r\n  // new google user match where they host the match table. The KUID needs to be base64 encoded, but the ids sent will be regular kuids\r\n  var baseEncodedKuid = btoa(kuid).replace(/=$/, '');\r\n  new Image().src = 'https://cm.g.doubleclick.net/pixel?google_nid=krux_digital&google_cm&google_hm='+baseEncodedKuid;\r\n  }\r\n\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":15,"name":"TheTradeDesk User Match","content":"<script>\r\n(function(){\r\nvar kuid = Krux('get', 'user');\r\nvar consent = Krux('iab:urlParams','gdpr_consent','gdpr',true);\r\nif (kuid) {\r\nif(!consent){\r\nconsent = \"&gdpr=0\";\r\n}\r\nvar p = location.protocol == 'https:' ? 'https:' : 'http:';\r\nvar purl = '//match.adsrvr.org/track/cmf/generic?ttd_pid=krux&ttd_tpi=1&ttd_puid=';\r\n(new Image()).src  = p + purl +kuid+ consent; \r\n}\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":21,"name":"Acxiom","content":"<script>\n(function(){\n  var kuid = Krux('get', 'user');\n  if (kuid) {\n      var liveramp_url = 'https://idsync.rlcdn.com/379708.gif?partner_uid=' + kuid;\n      var i = new Image();\n      i.src = liveramp_url;      \n  }\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":23,"name":"BlueKai S2S (Oracle)","content":"<script>\r\n    (function() {\r\n        var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n            var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n            var bk_prefix = location.protocol == 'https:' ? \"stags\" : \"tags\";\r\n            var bk_params = 'id=' + kuid;\r\n            var bk_url = '//' + bk_prefix + '.bluekai.com/site/26357?' + bk_params;\r\n            var i = new Image();\r\n            i.src = bk_url;\r\n        }\r\n    })();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":34,"name":"Comscore Data Tag","content":"<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  var cbust = Math.round(new Date().getTime() / 1000);\r\n  var prefix = location.protocol == 'https:' ? \"https:\" :\"http:\";\r\n  var url = prefix == 'https:' ? '//sb.scorecardresearch.com/p' : '//b.scorecardresearch.com/p';\r\n  if (kuid) {\r\n    Krux('require:http').pixel({\r\n      url: url,\r\n      data: {\r\n          c1: '9',\r\n          c2: '8188709',\r\n          cs_xi: kuid,\r\n          rn: cbust\r\n      }});\r\n  }\r\n  })();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":57,"name":"Innovid User Matching","content":"<script>\r\n(function(){\r\n         var prefix = window.location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n         var i_url = prefix + '//ag.innovid.com/dv/sync?tid=2';\r\n         var i = new Image();\r\n         i.src = i_url;\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":71,"name":"Xandr Connect","content":"<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        var consent = Krux('iab:urlParams');\r\n        if (kuid) {\r\n            if(!consent){\r\n                consent = \"\";\r\n            }\r\n            var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n            var kurl = prefix + '//beacon.krxd.net/usermatch.gif?adnxs_uid=$UID';\r\n            var appnexus_url = '//ib.adnxs.com/getuid?' + kurl + consent;\r\n            var map_url =  prefix+'//ib.adnxs.com/mapuid?member=1780&user='+kuid;\r\n            (new Image()).src=appnexus_url;\r\n             (new Image()).src=map_url;\r\n        }\r\n})();\r\n</script>\r\n\r\n<!-- Krux Config:\r\n\r\n-->","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":76,"name":"LiveRamp User Matching","content":"<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n      var liveramp_url = 'https://idsync.rlcdn.com/379708.gif?partner_uid=' + kuid;\r\n      var i = new Image();\r\n      i.src = liveramp_url;     \r\n  }\r\n})();\r\n</script>\r\n\r\n\r\n<!-- Krux Config:\r\n\r\n-->","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":99,"name":"Amazon User Match Pixel","content":"<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        var consent = Krux('iab:urlParams','gdpr_consent','gdpr',true);\r\n        if (kuid) {\r\n            var url = 'https://usermatch.krxd.net/um/v2?partner=amazon_eu';\r\n            if(!consent){\r\n                consent = \"&gdpr=0\";\r\n                url = 'https://usermatch.krxd.net/um/v2?partner=amazon_na';\r\n            }\r\n            url =  url + consent;\r\n            (new Image()).src = url;\r\n        }\r\n    })();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":28,"name":"Dstillery User Match","content":"<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n        var url = 'https://action.media6degrees.com/orbserv/hbpix?pixId=850317&pcv=91&ptid=84&tpuv=01&tpu=';\r\n        (new Image()).src = url+kuid;\r\n        }\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":2,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":47,"name":"Tremor User Match","content":"<script>\r\n(function(){\r\n    var kuid = window.Krux('get', 'user');\r\n    if (kuid) {\r\n       new Image().src = 'https://sync.1rx.io/usersync/krux/' + kuid + '?dspret=1';\r\n    }\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":2,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":60,"name":"VideoAmp","content":"<script>\n(function(){\n\tnew Image().src = location.protocol + '//usersync.videoamp.com/usersync?partner_id=6902992&redirect=' + location.protocol + encodeURIComponent('//beacon.krxd.net/usermatch.gif?partner=vidamp&partner_uid={vamp_user_id}');\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":3,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true}],"link":{"adslots":{},"bidders":{}}};
  
  for (var i = 0, tags = config.tags, len = tags.length, tag; (tag = tags[i]); ++i) {
    if (String(tag.id) in cs) {
      tag.content = cs[tag.id];
    }
  }

  
  var esiGeo = String(function(){/*
   <esi:include src="/geoip_esi"/>
  */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

  if (esiGeo) {
    log('Got a request for:', esiGeo, 'adding geo to config.');
    try {
      config.geo = w.JSON.parse(esiGeo);
    } catch (__) {
      
      log('Unable to parse geo from:', config.geo);
      config.geo = {};
    }
  }



  var proxy = (window.Krux && window.Krux.q && window.Krux.q[0] && window.Krux.q[0][0] === 'proxy');

  if (!proxy || true) {
    

  load('//cdn.krxd.net/ctjs/controltag.js.387e8802bbd0d9fbfa52c1546d7297df', function() {
    log('Loaded stable controltag resource');
    Krux('config', config);
  });

  }

})(window, (function() {
  var obj = {};
  
  return obj;
})());
